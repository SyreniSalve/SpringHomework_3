Create a project based on Spring Boot using:

    spring-boot-starter-web
    spring-boot-starter-data-jpa
    lombok
    h2

Part 1:

In the class FileData define the entity whose contents will be kept in the tablefiles_data. The entity ID is an automatically generated UUID object. In addition, this entity has the following columns:

    file_name
    extension
    size_in_kb
    content (assume that the file content is small)

This entity should be created at application startup and you should be able to confirm it in the h2 console at http://localhost:8080/h2, using the following URL:jdbc:h2:mem:testdb, user test with passwordpassword.

Create a repository for this entity, thanks to which you will perform basic CRUD operations.
Part 2

Create a REST API that will provide the following endpoints:

    GET /api/files-data - returns all FileData objects from the database as a JSON object (not a list)
    GET /api/files-data/{id} - returns a FileData object with a specific identifier (or throws an exception SdaException)
    POST /api/files-data - creates a FileData object and writes it to the database. Returns the status 201 and in the Location header, the URI to get it.
    PUT /api/files-data/{id} - updates an existing FileData object stored in the database. Returns status * 204 * (or throws SdaException when no object with the given id exists).
    DELETE /api/files-data/{id} - removes an existing FileData object stored in the database. Returns status * 204 * (or throws SdaException when no object with the given id exists).

The controller should not use the repository directly. Create a simple service layer that connects the database and web layers.

Use the following definition of the SdaException class:

public class SdaException extends RuntimeException {
  public SdaException(final String message) {
    super(message);
  }
}